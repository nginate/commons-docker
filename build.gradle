buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9'
    }
}

plugins {
    id 'nebula.optional-base' version '3.1.0'
    id "com.jfrog.bintray" version "1.7.1"
    id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: "maven-publish"
apply plugin: 'nebula.optional-base'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: "info.solidsoft.pitest"
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile "com.github.nginate:commons-lang:1.0.0"
    compile 'com.github.docker-java:docker-java:3.0.5'
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Utils
    compile 'com.google.guava:guava:19.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-collections4:4.1'

    // Annotation processors
    compile 'org.projectlombok:lombok:1.16.8', optional
    compile 'com.google.code.findbugs:jsr305:3.0.1', optional

    testCompile 'junit:junit:4.12'
    testCompile 'org.testng:testng:6.9.12'
    testCompile 'org.assertj:assertj-core:3.5.1'
    testCompile 'ch.qos.logback:logback-classic:1.1.7'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

pitest {
    threads = 4
    outputFormats = ['HTML']
    mutateStaticInits = true
    timestampedReports = false
}

jacocoTestReport {
    group = "report"
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
        stackTraceFilters = []
    }
}

bintray {
    user = findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'nginate'
        licenses = ['WTFPL']
        vcsUrl = 'https://github.com/nginate/commons-docker.git'
        version {
            name = project.version
            desc = "${project.name} $project.version"
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
            vcsTag = project.version
        }
    }
}

bintrayUpload.dependsOn ':generatePomFileForMavenPublication', ':assemble'
build.dependsOn install

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
